{"version":3,"sources":["../src/formats.js"],"names":["fs","require","path","DIR_NAME","FORMAT_TYPES","init","CODEC_TYPES","errs","readdirSync","join","__dirname","filter","file","slice","length","basename","__filename","map","replace","toUpperCase","forEach","e","err","validateFormat","push","Error","key","format","propNames","name","undefined","extension","charAt","display","codecs","includes"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,QAAQ,GAAG,YAAjB;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,IAAI,GAAIC,WAAD,IAAiB;AAC5B,QAAMC,IAAI,GAAG,EAAb;AACAP,EAAAA,EAAE,CAACQ,WAAH,CAAeN,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqBP,QAArB,CAAf,EACGQ,MADH,CAEKC,IAAD,IACEA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAc,CAAzB,MAAgC,KAAhC,IACAF,IAAI,KAAKV,IAAI,CAACa,QAAL,CAAcC,UAAd,CAJf,EAMGC,GANH,CAMQL,IAAD,IAAU,CACbA,IAAI,CACDC,KADH,CACS,CADT,EACY,CAAC,CADb,EAEGK,OAFH,CAEW,GAFX,EAEgB,EAFhB,EAGGA,OAHH,CAGW,GAHX,EAGgB,EAHhB,EAIGA,OAJH,CAIW,GAJX,EAIgB,GAJhB,EAKGC,WALH,EADa,EAOblB,OAAO,CAACC,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqBP,QAArB,EAA+BS,IAA/B,CAAD,CAAP,CAA8CN,WAA9C,CAPa,CANjB,EAeGc,OAfH,CAeYC,CAAD,IAAO;AACd,UAAMC,GAAG,GAAGC,cAAc,CAAC,GAAGF,CAAJ,CAA1B;;AACA,QAAIC,GAAJ,EAAS;AACPf,MAAAA,IAAI,CAACiB,IAAL,CAAUF,GAAV;AACD,KAFD,MAEO;AACLlB,MAAAA,YAAY,CAACiB,CAAC,CAAC,CAAD,CAAF,CAAZ,GAAqBA,CAAC,CAAC,CAAD,CAAtB;AACD;AACF,GAtBH;AAwBA,MAAId,IAAI,CAACO,MAAL,KAAgB,CAApB,EACE,MAAM,IAAIW,KAAJ,CAAW,oCAAmClB,IAAI,CAACE,IAAL,CAAU,IAAV,CAAgB,EAA9D,CAAN;AACH,CA5BD;;AA8BA,MAAMc,cAAc,GAAG,CAACG,GAAD,EAAMC,MAAN,KAAiB;AACtC,QAAMC,SAAS,GAAG,CAAC,MAAD,EAAS,WAAT,EAAsB,SAAtB,EAAiC,QAAjC,CAAlB;AACA,MAAIN,GAAJ;AACAM,EAAAA,SAAS,CAACR,OAAV,CAAmBS,IAAD,IAAU;AAC1B,QAAIF,MAAM,CAACE,IAAD,CAAN,KAAiB,IAAjB,IAAyBF,MAAM,CAACE,IAAD,CAAN,KAAiBC,SAA9C,EACER,GAAG,GAAG,IAAIG,KAAJ,CAAW,qCAAoCI,IAAK,EAApD,CAAN;AACH,GAHD;AAKA,MAAIP,GAAJ,EAAS,OAAOA,GAAP;AAET,MAAIK,MAAM,CAACI,SAAP,CAAiBC,MAAjB,CAAwB,CAAxB,MAA+B,GAAnC,EAAwC,OAAO,IAAIP,KAAJ,CAAU,mBAAV,CAAP;AACxC,MAAIE,MAAM,CAACM,OAAP,KAAmB,IAAnB,IAA2BN,MAAM,CAACM,OAAP,KAAmB,KAAlD,EACE,OAAO,IAAIR,KAAJ,CAAU,2BAAV,CAAP;AACF,MAAIE,MAAM,CAACO,MAAP,CAAcC,QAAd,CAAuBL,SAAvB,CAAJ,EAAuC,OAAO,IAAIL,KAAJ,CAAU,eAAV,CAAP;AAEvC,MAAIrB,YAAY,CAACsB,GAAD,CAAhB,EACE,OAAO,IAAID,KAAJ,CAAW,qBAAoBC,GAAI,kBAAnC,CAAP;AACH,CAjBD;;AAmBA,gBAAgBpB,WAAD,IAAiB;AAC9BD,EAAAA,IAAI,CAACC,WAAD,CAAJ;AACA,SAAOF,YAAP;AACD,CAHD","sourcesContent":["const fs = require(\"fs\");\nconst path = require(\"path\");\n\nconst DIR_NAME = \"../formats\";\nconst FORMAT_TYPES = {};\n\nconst init = (CODEC_TYPES) => {\n  const errs = [];\n  fs.readdirSync(path.join(__dirname, DIR_NAME))\n    .filter(\n      (file) =>\n        file.slice(file.length - 3) === \".js\" &&\n        file !== path.basename(__filename)\n    )\n    .map((file) => [\n      file\n        .slice(0, -3)\n        .replace(\"-\", \"\")\n        .replace(\".\", \"\")\n        .replace(\" \", \"_\")\n        .toUpperCase(),\n      require(path.join(__dirname, DIR_NAME, file))(CODEC_TYPES),\n    ])\n    .forEach((e) => {\n      const err = validateFormat(...e);\n      if (err) {\n        errs.push(err);\n      } else {\n        FORMAT_TYPES[e[0]] = e[1];\n      }\n    });\n\n  if (errs.length !== 0)\n    throw new Error(`Error(s) occurred while parsing: ${errs.join(\", \")}`);\n};\n\nconst validateFormat = (key, format) => {\n  const propNames = [\"name\", \"extension\", \"display\", \"codecs\"];\n  let err;\n  propNames.forEach((name) => {\n    if (format[name] === null || format[name] === undefined)\n      err = new Error(`Missing required format property: ${name}`);\n  });\n\n  if (err) return err;\n\n  if (format.extension.charAt(0) !== \".\") return new Error(\"Invalid extension\");\n  if (format.display !== true && format.display !== false)\n    return new Error(\"Invalid value for display\");\n  if (format.codecs.includes(undefined)) return new Error(\"Invalid codec\");\n\n  if (FORMAT_TYPES[key])\n    return new Error(`Format type for: (${key}) already exists`);\n};\n\nexport default (CODEC_TYPES) => {\n  init(CODEC_TYPES);\n  return FORMAT_TYPES;\n};\n"],"file":"formats.js"}